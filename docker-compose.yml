# ElCeibo - Docker Compose para Instalación Local
version: '3.8'

services:
  # Aplicación Next.js
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://elceibo:elceibo123@db:5432/elceibo
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-default-secret-change-in-production}
    depends_on:
      - db
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    networks:
      - elceibo-network

  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=elceibo
      - POSTGRES_USER=elceibo
      - POSTGRES_PASSWORD=elceibo123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - elceibo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U elceibo -d elceibo"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx (opcional, para producción)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - elceibo-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local

networks:
  elceibo-network:
    driver: bridge

